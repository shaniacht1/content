description: Add email details to the relevant context entities and handle the case
  where original emails are attached.
id: process_email_-_generic
inputs:
- description: An EML or MSG file with
  key: File
  required: false
  value:
    complex:
      root: File
- description: The receiving email address
  key: Email
  required: false
  value:
    complex:
      accessor: labels.Email
      root: incident
- description: CC addresses
  key: Email/cc
  required: false
  value:
    complex:
      accessor: labels.CC
      root: incident
- description: The originator of the email
  key: Email/from
  required: false
  value:
    complex:
      accessor: labels.Email/from
      root: incident
- description: The email’s subject
  key: Email/subject
  required: false
  value:
    complex:
      accessor: labels.Email/subject
      root: incident
- description: The email’s text
  key: Email/text
  required: false
  value:
    complex:
      accessor: labels.Email/text
      root: incident
- description: The emai’sl html
  key: Email/html
  required: false
  value:
    complex:
      accessor: labels.Email/html
      root: incident
- description: The email’s headers
  key: Email/headers
  required: false
  value:
    complex:
      accessor: labels.Email/headers
      root: incident
- description: The email’s format
  key: Email/format
  required: false
  value:
    complex:
      accessor: labels.Email/format
      root: incident
- description: |-
    Retrieve the original email in the thread. Default is "False".

    You must have the necessary permissions in your email service to execute global search.

    - EWS: eDiscovery
    - Gmail: Google Apps Domain-Wide Delegation of Authority
  key: GetOriginalEmail
  required: false
  value:
    simple: "False"
name: Process Email - Generic
outputs:
- contextPath: Email.HTML
  description: Email 'html' body if exists
  type: string
- contextPath: Email
  description: Email object
  type: unknown
- contextPath: Email.CC
  description: Email 'cc' addresses
  type: string
- contextPath: Email.From
  description: Email 'from' sender
  type: string
- contextPath: Email.Subject
  description: Email subject
  type: string
- contextPath: Email.To
  description: Email 'to' addresses
  type: string
- contextPath: Email.Text
  description: Email 'text' body if exists
  type: string
- contextPath: Email.Headers
  description: The full email headers as a single string
  type: string
- contextPath: Email.Attachments
  description: The list of attachment names in the email
  type: string
- contextPath: Email.Format
  description: The format of the email if available
  type: string
- contextPath: File
  description: The File object
  type: unknown
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: ccd00127-175c-4a93-8edb-14e71f7d47ea
      iscommand: false
      name: ""
      version: -1
    taskid: ccd00127-175c-4a93-8edb-14e71f7d47ea
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": -280
        }
      }
  "1":
    id: "1"
    ignoreworker: false
    nexttasks:
      "no":
      - "16"
      "yes":
      - "3"
    note: false
    reputationcalc: 1
    scriptarguments:
      value:
        simple: ${inputs.File(val.Type.toLowerCase().indexOf('rfc 822 mail') >= 0
          || val.Type.toLowerCase().indexOf('smtp mail') >= 0 || val.Type.toLowerCase().indexOf('cdfv2
          microsoft outlook message') >= 0 || val.Type.toLowerCase().indexOf('news
          or mail') >= 0 || (val.Type.toLowerCase().indexOf('composite document file
          v2 document') >= 0 && val.Extension.toLowerCase() == 'msg') || (val.Extension.toLowerCase()
          == 'eml' && val.Type.toLowerCase() == 'data') || val.Type.toLowerCase().indexOf('multipart/signed')
          >= 0 || (val.Extension.toLowerCase() == 'eml' && val.Type.toLowerCase().indexOf('text')
          >= 0)).EntryID}
    separatecontext: false
    task:
      brand: ""
      description: Check if we have any attachments with relevant attachment types
        like eml or rfc822
      id: 70863b9a-af3f-4f0a-8e91-cae2c88f5488
      iscommand: false
      name: Do we have original emails attached?
      script: Exists
      type: condition
      version: -1
    taskid: 70863b9a-af3f-4f0a-8e91-cae2c88f5488
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 377.5,
          "y": -65
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    reputationcalc: 2
    scriptarguments:
      append: {}
      key:
        simple: Email
      value:
        simple: '${inputs={To: val[''Email''], CC: val[''Email/cc''], From: val[''Email/from''],
          Subject: val[''Email/subject''], Text: val[''Email/text''], HTML: val[''Email/html''],
          Headers: val[''Email/headers''], Format: val[''Email/format'']}}'
    separatecontext: false
    task:
      brand: ""
      id: 0dd910be-f198-4b5d-8dbb-8d7170049463
      iscommand: false
      name: Add original email details to context
      script: Set
      type: regular
      version: -1
    taskid: 0dd910be-f198-4b5d-8dbb-8d7170049463
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -60,
          "y": 820
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    reputationcalc: 2
    results:
    - AttachmentName
    scriptarguments:
      entryid:
        simple: ${inputs.File(val.Type.toLowerCase().indexOf('rfc 822 mail') >= 0
          || val.Type.toLowerCase().indexOf('smtp mail') >= 0 || val.Type.toLowerCase().indexOf('cdfv2
          microsoft outlook message') >= 0 || val.Type.toLowerCase().indexOf('news
          or mail') >= 0 || (val.Type.toLowerCase().indexOf('composite document file
          v2 document') >= 0 && val.Extension.toLowerCase() == 'msg') || (val.Extension.toLowerCase()
          == 'eml' && val.Type.toLowerCase() == 'data') || val.Type.toLowerCase().indexOf('multipart/signed')
          >= 0 || (val.Extension.toLowerCase() == 'eml' && val.Type.toLowerCase().indexOf('text')
          >= 0)).EntryID}
    separatecontext: false
    task:
      brand: ""
      description: Parses an email from an EML or MSG file and populates all relevant
        context data to investigate the email. Also extracts indicators from the email
        messages.
      id: 4ac2b332-b76d-463e-824e-717895c5b644
      iscommand: false
      name: Add original email attachments to context
      script: ParseEmailFiles
      type: regular
      version: -1
    taskid: 4ac2b332-b76d-463e-824e-717895c5b644
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 630,
          "y": 195
        }
      }
  "4":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: HTML
                root: Email
          operator: isExists
      - - left:
            iscontext: true
            value:
              simple: Email.HTML
          operator: isNotEmpty
      label: "yes"
    id: "4"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: d6f90ffe-1111-447a-8755-65189ec1f6d5
      iscommand: false
      name: Is there an HTML label in the email?
      type: condition
      version: -1
    taskid: d6f90ffe-1111-447a-8755-65189ec1f6d5
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1220
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "6"
    note: false
    reputationcalc: 1
    scriptarguments:
      height: {}
      htmlBody:
        complex:
          accessor: HTML
          root: Email
      type: {}
      width: {}
    separatecontext: false
    task:
      brand: Rasterize
      id: 3a4baebb-0463-442c-8971-3f681d240366
      iscommand: true
      name: Render HTML to an image
      script: Rasterize|||rasterize-email
      tags:
      - email_html_image
      type: regular
      version: -1
    taskid: 3a4baebb-0463-442c-8971-3f681d240366
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 100,
          "y": 1440
        }
      }
  "6":
    id: "6"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: dd0d5106-965e-4a81-8e67-79392ea47d7f
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: dd0d5106-965e-4a81-8e67-79392ea47d7f
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1670
        }
      }
  "11":
    id: "11"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "4"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 104966c4-8595-4a5a-8c75-c84f55e51c84
      iscommand: false
      name: Advance features
      type: title
      version: -1
    taskid: 104966c4-8595-4a5a-8c75-c84f55e51c84
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 340,
          "y": 1070
        }
      }
  "13":
    id: "13"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    reputationcalc: 2
    scriptarguments:
      1longtexttest: {}
      aaaa: {}
      addLabels: {}
      adgroupname: {}
      alertlevel: {}
      amarkdownsection: {}
      anothernumberpleasejusttomakesure: {}
      app: {}
      arcsightcaseid: {}
      assetid: {}
      attach: {}
      attachamenthash: {}
      attachmentcount:
        complex:
          accessor: |
            Attachment.Count
          root: Email
      attachmentextension:
        complex:
          accessor: Attachment.Extension
          root: Email
      attachmenthash:
        complex:
          accessor: Attachment.Hash
          root: Email
      attachmentid:
        complex:
          accessor: Attachment.ID
          root: Email
      attachmentitem:
        complex:
          accessor: Attachment.Item
          root: Email
      attachmentname:
        complex:
          accessor: Attachment.Name
          root: Email
      attachmentsize:
        complex:
          accessor: Attachment.Size
          root: Email
      attachmenttype:
        complex:
          accessor: Attachment.Type
          root: Email
      awsinstancename: {}
      backupowner: {}
      bbb: {}
      blah: {}
      bool1: {}
      bool2: {}
      booleansummary: {}
      booleantest: {}
      boolfield: {}
      booltest: {}
      bugtraq: {}
      casenumber: {}
      ccc: {}
      ccipaddress: {}
      cleanname: {}
      compliance: {}
      constvalue: {}
      customFields: {}
      customfield: {}
      cve: {}
      cvss: {}
      date2: {}
      datepicker: {}
      daysbetweenreportcreation: {}
      deleteEmptyField:
        simple: "True"
      department: {}
      departmentadmin: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      dstip: {}
      duration: {}
      emailbcc:
        complex:
          accessor: BCC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          accessor: Text
          root: Email
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          accessor: BodyFormat
          root: Email
      emailbodyhtml:
        complex:
          accessor: HTML
          root: Email
          transformers:
          - operator: Stringify
      emailcc:
        complex:
          accessor: CC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclientname:
        complex:
          accessor: ClientName
          root: Email
      emailfrom:
        complex:
          accessor: From
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailimage:
        complex:
          accessor: Image
          root: Email
      emailinreplyto:
        complex:
          accessor: InReplyTo
          root: Email
      emailkeywords:
        complex:
          accessor: Keywords
          root: Email
      emailmessageid:
        complex:
          accessor: ID
          root: Email
      emailreceived:
        complex:
          accessor: Received
          root: Email
      emailreplyto:
        complex:
          accessor: ReplyTo
          root: Email
      emailreturnpath:
        complex:
          accessor: ReturnPath
          root: Email
      emailsenderip:
        complex:
          accessor: SenderIP
          root: Email
      emailsize:
        complex:
          accessor: Size
          root: Email
      emailsource:
        complex:
          accessor: Source
          root: Email
      emailsubject:
        complex:
          accessor: Subject
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailto:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
          - args:
              separator:
                value:
                  simple: ','
            operator: join
      emailtocount:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
          - operator: count
      emailurlclicked:
        complex:
          root: EmailUrlClicked
      enisacategory: {}
      escalationdate: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      field1: {}
      field2: {}
      field3: {}
      field4: {}
      filehash: {}
      filename: {}
      filepath: {}
      fwlogs: {}
      gatenumber: {}
      hash: {}
      hjhj: {}
      host: {}
      htmlimage: {}
      htmlrenderedimage: {}
      htmltypefield: {}
      id: {}
      important: {}
      importantfield: {}
      infectedhost: {}
      intelblockcomment: {}
      intelblockurl: {}
      internalemail: {}
      internalusage: {}
      itaytestfield: {}
      jiraticketid: {}
      killchain: {}
      labels: {}
      lob: {}
      longtextone: {}
      longtexttoo: {}
      mailbody: {}
      malwarefamily: {}
      mdtest: {}
      mitigated: {}
      mttd: {}
      multilinetext: {}
      mydate: {}
      myfield: {}
      myname: {}
      myseverity: {}
      name: {}
      newmarkdownfield: {}
      newtextfield: {}
      noatext: {}
      numberplease: {}
      objecttype: {}
      occurred: {}
      originalhtml: {}
      oriwithspace: {}
      owner: {}
      phase: {}
      phishingsender: {}
      phishingsenderdomain: {}
      priority: {}
      qradaroffenceid: {}
      queues: {}
      relatedincidentssummary: {}
      replacePlaybook: {}
      reporteduser: {}
      riskmitigationactionrequirements: {}
      riskscore: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      sender: {}
      sensitive: {}
      severity: {}
      shift: {}
      shiftnotes: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      source: {}
      sourceip: {}
      sourceip1: {}
      src: {}
      srcip: {}
      srcntdomain: {}
      srcuser: {}
      subcat: {}
      subcategory: {}
      summary: {}
      systems: {}
      targethostname: {}
      team: {}
      telefield: {}
      teleselect: {}
      test: {}
      test2: {}
      test111: {}
      testassociationdumpme: {}
      testfield: {}
      testguy: {}
      testhtml: {}
      thisismysuperlongfield: {}
      tier2owner: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      timetomitigate: {}
      timetotriage: {}
      tldr: {}
      tlp: {}
      tttttt: {}
      type: {}
      uniquefiled: {}
      user: {}
      useremail: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      vvvv: {}
      zattachmentsgeneric: {}
      zmaltegoimage: {}
      zvtfirstseen: {}
      zvtother: {}
      zvtvendorcount: {}
    separatecontext: false
    task:
      brand: Builtin
      description: Updates Demisto incident fields using data from the email object.
        Also extracts indicators from the email message.
      id: 9d6defc4-5ef1-4523-8136-08372aa15544
      iscommand: true
      name: Set incident with the Email object data
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 9d6defc4-5ef1-4523-8136-08372aa15544
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 350,
          "y": 820
        }
      }
  "16":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.GetOriginalEmail
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    id: "16"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "17"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: If True, retrieve the original email in the thread
      id: bc0dd5a2-6073-4f44-8abc-9bc48e3e08c1
      iscommand: false
      name: Should retrieve the original email?
      type: condition
      version: -1
    taskid: bc0dd5a2-6073-4f44-8abc-9bc48e3e08c1
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 110,
          "y": 195
        }
      }
  "17":
    id: "17"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "18"
    note: false
    separatecontext: true
    task:
      brand: ""
      description: |-
        Use this playbook to retrieve the original email in the thread, including headers and attahcments, when the reporting user forwarded the original email not as an attachment.

        You must have the necessary permissions in your email service to execute global search.

        - EWS: eDiscovery
        - Gmail: Google Apps Domain-Wide Delegation of Authority
      id: e6915e5d-bdca-4d59-8636-2e65b2e680e1
      iscommand: false
      name: Get Original Email - Generic
      playbookId: get_original_email_-_generic
      type: playbook
      version: -1
    taskid: e6915e5d-bdca-4d59-8636-2e65b2e680e1
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 340,
          "y": 450
        }
      }
  "18":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: Email
          operator: isExists
      label: "yes"
    id: "18"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "13"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Is there an email object in the context?
      id: 9a505e0b-27c1-424a-880a-253135d80683
      iscommand: false
      name: Was the original email retrieved?
      type: condition
      version: -1
    taskid: 9a505e0b-27c1-424a-880a-253135d80683
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 340,
          "y": 620
        }
      }
  "19":
    id: "19"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    reputationcalc: 1
    scriptarguments:
      1longtexttest: {}
      aaaa: {}
      addLabels: {}
      adgroupname: {}
      alertlevel: {}
      amarkdownsection: {}
      anothernumberpleasejusttomakesure: {}
      app: {}
      arcsightcaseid: {}
      assetid: {}
      attach: {}
      attachamenthash: {}
      attachmentcount:
        complex:
          accessor: |
            Attachment.Count
          root: Email
      attachmentextension:
        complex:
          accessor: Attachment.Extension
          root: Email
      attachmenthash:
        complex:
          accessor: Attachment.Hash
          root: Email
      attachmentid:
        complex:
          accessor: Attachment.ID
          root: Email
      attachmentitem:
        complex:
          accessor: Attachment.Item
          root: Email
      attachmentname:
        complex:
          accessor: Attachment.Name
          root: Email
      attachmentsize:
        complex:
          accessor: Attachment.Size
          root: Email
      attachmenttype:
        complex:
          accessor: Attachment.Type
          root: Email
      awsinstancename: {}
      backupowner: {}
      bbb: {}
      blah: {}
      bool1: {}
      bool2: {}
      booleansummary: {}
      booleantest: {}
      boolfield: {}
      booltest: {}
      bugtraq: {}
      casenumber: {}
      ccc: {}
      ccipaddress: {}
      cleanname: {}
      closeNotes: {}
      closeReason: {}
      compliance: {}
      constvalue: {}
      customFields: {}
      customfield: {}
      cve: {}
      cvss: {}
      date2: {}
      datepicker: {}
      daysbetweenreportcreation: {}
      deleteEmptyField:
        simple: "True"
      department: {}
      departmentadmin: {}
      dest: {}
      destinationip: {}
      destntdomain: {}
      details: {}
      dstip: {}
      duration: {}
      emailbcc:
        complex:
          accessor: HeadersMap.BCC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailbody:
        complex:
          accessor: Text
          root: Email
          transformers:
          - operator: Stringify
      emailbodyformat:
        complex:
          accessor: BodyFormat
          root: Email
      emailbodyhtml:
        complex:
          accessor: HTML
          root: Email
          transformers:
          - operator: Stringify
      emailbodyhtmlraw: {}
      emailcc:
        complex:
          accessor: CC
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailclientname:
        complex:
          accessor: ClientName
          root: Email
      emailfrom:
        complex:
          accessor: From
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailfromdisplayname: {}
      emailimage:
        complex:
          accessor: Image
          root: Email
      emailinreplyto:
        complex:
          accessor: InReplyTo
          root: Email
      emailkeywords:
        complex:
          accessor: Keywords
          root: Email
      emailmessageid:
        complex:
          accessor: HeadersMap.Message-ID
          root: Email
          transformers:
          - operator: uniq
      emailreceived: {}
      emailreplyto:
        complex:
          accessor: HeadersMap.Reply-To
          root: Email
          transformers:
          - operator: uniq
      emailreturnpath:
        complex:
          accessor: HeadersMap.Return-Path
          root: Email
          transformers:
          - operator: uniq
      emailsenderdomain: {}
      emailsenderip:
        complex:
          accessor: SenderIP
          root: Email
          transformers:
          - operator: uniq
      emailsize:
        complex:
          accessor: Size
          root: Email
          transformers:
          - operator: uniq
      emailsource:
        complex:
          accessor: Source
          root: Email
          transformers:
          - operator: uniq
      emailsubject:
        complex:
          accessor: Subject
          root: Email
          transformers:
          - operator: uniq
          - operator: Stringify
      emailsubjectlanguage: {}
      emailto:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
      emailtocount:
        complex:
          accessor: To
          root: Email
          transformers:
          - operator: uniq
          - operator: count
      emailurlclicked:
        complex:
          root: EmailUrlClicked
      enisacategory: {}
      escalationdate: {}
      eventid: {}
      falses: {}
      fetchid: {}
      fetchtype: {}
      field1: {}
      field2: {}
      field3: {}
      field4: {}
      filehash: {}
      filename: {}
      filepath: {}
      fwlogs: {}
      gatenumber: {}
      hash: {}
      hjhj: {}
      host: {}
      htmlimage: {}
      htmlrenderedimage: {}
      htmltypefield: {}
      id: {}
      important: {}
      importantfield: {}
      infectedhost: {}
      intelblockcomment: {}
      intelblockurl: {}
      internalemail: {}
      internalusage: {}
      itaytestfield: {}
      jiraticketid: {}
      killchain: {}
      labels: {}
      lob: {}
      longtextone: {}
      longtexttoo: {}
      mailbody: {}
      malwarefamily: {}
      mdtest: {}
      mitigated: {}
      mttd: {}
      multilinetext: {}
      mydate: {}
      myfield: {}
      myname: {}
      myseverity: {}
      name: {}
      newmarkdownfield: {}
      newtextfield: {}
      noatext: {}
      numberplease: {}
      objecttype: {}
      occurred: {}
      originalhtml: {}
      oriwithspace: {}
      owner: {}
      phase: {}
      phishingsender: {}
      phishingsenderdomain: {}
      priority: {}
      qradaroffenceid: {}
      queues: {}
      relatedincidentssummary: {}
      replacePlaybook: {}
      reporteduser: {}
      reportinguser: {}
      riskmitigationactionrequirements: {}
      riskscore: {}
      roles: {}
      screenshot: {}
      screenshot2: {}
      selector: {}
      sender: {}
      sensitive: {}
      severity: {}
      shift: {}
      shiftnotes: {}
      signature: {}
      single: {}
      single2: {}
      sla: {}
      slaField: {}
      source: {}
      sourceip: {}
      sourceip1: {}
      src: {}
      srcip: {}
      srcntdomain: {}
      srcuser: {}
      subcat: {}
      subcategory: {}
      summary: {}
      systems: {}
      targethostname: {}
      team: {}
      telefield: {}
      teleselect: {}
      test: {}
      test2: {}
      test111: {}
      testassociationdumpme: {}
      testfield: {}
      testguy: {}
      testhtml: {}
      thisismysuperlongfield: {}
      tier2owner: {}
      timeassignedtolevel2: {}
      timefield1: {}
      timelevel1: {}
      timetomitigate: {}
      timetotriage: {}
      tldr: {}
      tlp: {}
      tttttt: {}
      type: {}
      uniquefiled: {}
      user: {}
      useremail: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
      vvvv: {}
      zattachmentsgeneric: {}
      zmaltegoimage: {}
      zvtfirstseen: {}
      zvtother: {}
      zvtvendorcount: {}
    separatecontext: false
    task:
      brand: Builtin
      description: Updates Demisto incident fields using data from the email object.
      id: 040c1852-c639-4322-80d0-e10d0dfc9b09
      iscommand: true
      name: Set incident with the Email object data
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 040c1852-c639-4322-80d0-e10d0dfc9b09
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 870,
          "y": 610
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "16_2_#default#": 0.73,
      "18_13_yes": 0.72,
      "18_2_#default#": 0.47,
      "4_5_yes": 0.57
    },
    "paper": {
      "dimensions": {
        "height": 2015,
        "width": 1310,
        "x": -60,
        "y": -280
      }
    }
  }
